[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudProcessor::process_pointcloud(const ConstPtr&)[m[Kâ€™:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KtransformPointCloud(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >&, pcl::PointCloud<pcl::PointXYZ>&, Eigen::Matrix4f&)[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;31m[K)[m[K;
      |                                                                                                  [01;31m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:498[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:215:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
  215 | [01;36m[Kpcl[m[K::transformPointCloud (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:215:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:66:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
   66 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:66:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:498[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:259:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const std::vector<int>&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
  259 | [01;36m[Kpcl[m[K::transformPointCloud (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:259:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:91:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const std::vector<int>&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
   91 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:91:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:110:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
  110 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:110:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:120:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
  120 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:120:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:219:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  219 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:219:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:229:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  229 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:229:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:247:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const std::vector<int>&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  247 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:247:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:258:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const std::vector<int>&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  258 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:258:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:277:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  277 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:277:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:287:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  287 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:287:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:498[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:405:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 3, 1>&, const Eigen::Quaternion<Scalar>&, bool)[m[Kâ€™
  405 | [01;36m[Kpcl[m[K::transformPointCloud (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:405:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:409:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Vector3f&, const Quaternionf&, bool)[m[Kâ€™
  409 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:409:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
make[2]: *** [CMakeFiles/lidar_slam.dir/build.make:76ï¼šCMakeFiles/lidar_slam.dir/src/point_process.cpp.o] é”™è¯¯ 1
make[1]: *** [CMakeFiles/Makefile2:2297ï¼šCMakeFiles/lidar_slam.dir/all] é”™è¯¯ 2
make: *** [Makefile:141ï¼šall] é”™è¯¯ 2
