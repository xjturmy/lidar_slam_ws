[35m[1mScanning dependencies of target lidar_slam[0m
[ 33%] [32mBuilding CXX object CMakeFiles/lidar_slam.dir/src/main.cpp.o[0m
[ 66%] [32mBuilding CXX object CMakeFiles/lidar_slam.dir/src/point_process.cpp.o[0m
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudProcessor::process_pointcloud(const ConstPtr&)[m[Kâ€™:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:42:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand type is â€˜[01m[K__gnu_cxx::__alloc_traits<std::allocator<Eigen::Matrix<float, 4, 4> >, Eigen::Matrix<float, 4, 4> >::value_type[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™})
  530 |                 transformation_total_ = ([01;31m[K*transformations.back()[m[K) * transformation_total_;
      |                                          [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:88[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, T> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, T> > >::value>::type>::type> >::type Eigen::MatrixBase<Derived>::operator*(const T&) const [with T = T; Derived = Eigen::Matrix<float, 4, 4>][m[Kâ€™
   50 | [01;36m[KEIGEN_MAKE_SCALAR_BINARY_OP[m[K(operator*,product)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:436[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:166:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class OtherDerived> const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = OtherDerived; Derived = Eigen::Matrix<float, 4, 4>][m[Kâ€™
  166 |     [01;36m[Koperator[m[K*(const MatrixBase<OtherDerived> &other) const;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:166:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:436[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:185:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class DiagonalDerived> const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::operator*(const Eigen::DiagonalBase<DiagonalDerived>&) const [with DiagonalDerived = DiagonalDerived; Derived = Eigen::Matrix<float, 4, 4>][m[Kâ€™
  185 |     [01;36m[Koperator[m[K*(const DiagonalBase<DiagonalDerived> &diagonal) const;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:185:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:487[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:543:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MatrixDerived, class PermutationDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::PermutationBase<PermutationDerived>&)[m[Kâ€™
  543 | [01;36m[Koperator[m[K*(const MatrixBase<MatrixDerived> &matrix,
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:543:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:487[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:555:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PermutationDerived, class MatrixDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::PermutationBase<PermutationDerived>&, const Eigen::MatrixBase<U>&)[m[Kâ€™
  555 | [01;36m[Koperator[m[K*(const PermutationBase<PermutationDerived> &permutation,
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:555:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  â€˜[01m[K__gnu_cxx::__alloc_traits<std::allocator<Eigen::Matrix<float, 4, 4> >, Eigen::Matrix<float, 4, 4> >::value_type[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::PermutationBase<PermutationDerived>[m[Kâ€™
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:488[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:338:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MatrixDerived, class TranspositionsDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::TranspositionsBase<TranspositionsDerived>&)[m[Kâ€™
  338 | [01;36m[Koperator[m[K*(const MatrixBase<MatrixDerived> &matrix,
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:338:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:488[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:350:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class TranspositionsDerived, class MatrixDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::TranspositionsBase<TranspositionsDerived>&, const Eigen::MatrixBase<U>&)[m[Kâ€™
  350 | [01;36m[Koperator[m[K*(const TranspositionsBase<TranspositionsDerived> &transpositions,
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:350:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  â€˜[01m[K__gnu_cxx::__alloc_traits<std::allocator<Eigen::Matrix<float, 4, 4> >, Eigen::Matrix<float, 4, 4> >::value_type[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::TranspositionsBase<TranspositionsDerived>[m[Kâ€™
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Householder:24[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/QR:17[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/SVD:11[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Geometry:15[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:46[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Householder/HouseholderSequence.h:438:99:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class OtherDerived, class VectorsType, class CoeffsType, int Side> typename Eigen::internal::matrix_type_times_scalar_type<typename VectorsType::Scalar, OtherDerived>::Type Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>&)[m[Kâ€™
  438 | typename internal::matrix_type_times_scalar_type<typename VectorsType::Scalar,OtherDerived>::Type [01;36m[Koperator[m[K*(const MatrixBase<OtherDerived>& other, const HouseholderSequence<VectorsType,CoeffsType,Side>& h)
      |                                                                                                   [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Householder/HouseholderSequence.h:438:99:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Geometry:46[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:46[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Scaling.h:117:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class Derived, class Scalar> Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, Scalar>, const Derived, const typename Eigen::internal::plain_constant_type<Expr, Scalar>::type> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::UniformScaling<Scalar>&)[m[Kâ€™
  117 | [01;36m[Koperator[m[K*(const MatrixBase<Derived>& matrix, const UniformScaling<Scalar>& s)
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Scaling.h:117:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:88[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<float, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, float, Eigen::internal::scalar_product_op<T, float> > >::value>::type, float>, const typename Eigen::internal::plain_constant_type<Eigen::Matrix<float, 4, 4>, typename Eigen::internal::promote_scalar_arg<float, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, float, Eigen::internal::scalar_product_op<T, float> > >::value>::type>::type, const Eigen::Matrix<float, 4, 4> > >::type Eigen::operator*(const T&, const StorageBaseType&)[m[Kâ€™
   50 | [01;36m[KEIGEN_MAKE_SCALAR_BINARY_OP[m[K(operator*,product)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:530:64:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
  530 |                 transformation_total_ = (*transformations.back([01;36m[K)[m[K) * transformation_total_;
      |                                                                [01;36m[K^[m[K
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:537:37:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>[m[Kâ€™ to â€˜[01m[Kconst Ptr&[m[Kâ€™ {aka â€˜[01m[Kconst boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
  537 |                 publish_pointcloud([01;31m[K(*cloud_buffer.back())[m[K, "base_link", pc_ndt_pub);
      |                                    [01;31m[K~^~~~~~~~~~~~~~~~~~~~~[m[K
      |                                     [01;31m[K|[m[K
      |                                     [01;31m[Kpcl::PointCloud<pcl::PointXYZ>[m[K
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:94:89:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid PointCloudProcessor::publish_pointcloud(const Ptr&, const string&, ros::Publisher&)[m[Kâ€™
   94 | void PointCloudProcessor::publish_pointcloud([01;36m[Kconst pcl::PointCloud<pcl::PointXYZ>::Ptr &points[m[K,
      |                                              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~[m[K
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:538:42:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand type is â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>[m[Kâ€™)
  538 |                 pcl::transformPointCloud([01;31m[K*(*cloud_buffer.back())[m[K, *transformed_cloud, transformation_total_);
      |                                          [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/lidar_slam.dir/build.make:76ï¼šCMakeFiles/lidar_slam.dir/src/point_process.cpp.o] é”™è¯¯ 1
make[1]: *** [CMakeFiles/Makefile2:2297ï¼šCMakeFiles/lidar_slam.dir/all] é”™è¯¯ 2
make: *** [Makefile:141ï¼šall] é”™è¯¯ 2
