[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudProcessor::process_pointcloud(const ConstPtr&)[m[Kâ€™:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:57:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} and â€˜[01m[KEigen::Matrix4f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™})
  456 |         transformation_total_ = [32m[Ktransformations.begin()[m[K [01;31m[K*[m[K [34m[Ktransformation_total_[m[K;
      |                                 [32m[K~~~~~~~~~~~~~~~~~~~~~~~[m[K [01;31m[K^[m[K [34m[K~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                      [32m[K|[m[K    [34m[K|[m[K
      |                                                      [32m[K|[m[K    [34m[KEigen::Matrix4f {aka Eigen::Matrix<float, 4, 4>}[m[K
      |                                                      [32m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator {aka __gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >}[m[K
In file included from [01m[K/usr/include/c++/9/bits/stl_algobase.h:67[m[K,
                 from [01m[K/usr/include/c++/9/bits/char_traits.h:39[m[K,
                 from [01m[K/usr/include/c++/9/string:40[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/platform.h:38[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/time.h:53[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:38[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:4[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/c++/9/bits/stl_iterator.h:816:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[K__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = Eigen::Matrix<float, 4, 4>*; _Container = std::vector<Eigen::Matrix<float, 4, 4> >; __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = Eigen::Matrix<float, 4, 4>&][m[Kâ€™
  816 |       [01;36m[Koperator[m[K*() const _GLIBCXX_NOEXCEPT
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_iterator.h:816:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
In file included from [01m[K/usr/include/eigen3/Eigen/Core:487[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:543:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MatrixDerived, class PermutationDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::PermutationBase<PermutationDerived>&)[m[Kâ€™
  543 | [01;36m[Koperator[m[K*(const MatrixBase<MatrixDerived> &matrix,
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:543:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:487[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:555:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PermutationDerived, class MatrixDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::PermutationBase<PermutationDerived>&, const Eigen::MatrixBase<U>&)[m[Kâ€™
  555 | [01;36m[Koperator[m[K*(const PermutationBase<PermutationDerived> &permutation,
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:555:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::PermutationBase<PermutationDerived>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:488[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:338:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MatrixDerived, class TranspositionsDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::TranspositionsBase<TranspositionsDerived>&)[m[Kâ€™
  338 | [01;36m[Koperator[m[K*(const MatrixBase<MatrixDerived> &matrix,
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:338:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:488[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:350:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class TranspositionsDerived, class MatrixDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::TranspositionsBase<TranspositionsDerived>&, const Eigen::MatrixBase<U>&)[m[Kâ€™
  350 | [01;36m[Koperator[m[K*(const TranspositionsBase<TranspositionsDerived> &transpositions,
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:350:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::TranspositionsBase<TranspositionsDerived>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Householder:24[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/QR:17[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/SVD:11[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Geometry:15[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:46[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Householder/HouseholderSequence.h:438:99:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class OtherDerived, class VectorsType, class CoeffsType, int Side> typename Eigen::internal::matrix_type_times_scalar_type<typename VectorsType::Scalar, OtherDerived>::Type Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>&)[m[Kâ€™
  438 | typename internal::matrix_type_times_scalar_type<typename VectorsType::Scalar,OtherDerived>::Type [01;36m[Koperator[m[K*(const MatrixBase<OtherDerived>& other, const HouseholderSequence<VectorsType,CoeffsType,Side>& h)
      |                                                                                                   [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Householder/HouseholderSequence.h:438:99:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Geometry:46[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:46[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Scaling.h:117:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class Derived, class Scalar> Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, Scalar>, const Derived, const typename Eigen::internal::plain_constant_type<Expr, Scalar>::type> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::UniformScaling<Scalar>&)[m[Kâ€™
  117 | [01;36m[Koperator[m[K*(const MatrixBase<Derived>& matrix, const UniformScaling<Scalar>& s)
      | [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Scaling.h:117:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:88[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<float, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, float, Eigen::internal::scalar_product_op<T, float> > >::value>::type, float>, const typename Eigen::internal::plain_constant_type<Eigen::Matrix<float, 4, 4>, typename Eigen::internal::promote_scalar_arg<float, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, float, Eigen::internal::scalar_product_op<T, float> > >::value>::type>::type, const Eigen::Matrix<float, 4, 4> > >::type Eigen::operator*(const T&, const StorageBaseType&)[m[Kâ€™
   50 | [01;36m[KEIGEN_MAKE_SCALAR_BINARY_OP[m[K(operator*,product)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h: In substitution of â€˜[01m[Ktemplate<class T> typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<float, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, float, Eigen::internal::scalar_product_op<T, float> > >::value>::type, float>, const typename Eigen::internal::plain_constant_type<Eigen::Matrix<float, 4, 4>, typename Eigen::internal::promote_scalar_arg<float, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, float, Eigen::internal::scalar_product_op<T, float> > >::value>::type>::type, const Eigen::Matrix<float, 4, 4> > >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = __gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >][m[Kâ€™:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct Eigen::internal::promote_scalar_arg<float, __gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >, false>[m[Kâ€™
In file included from [01m[K/usr/include/boost/config/no_tr1/complex.hpp:21[m[K,
                 from [01m[K/usr/include/boost/math/policies/error_handling.hpp:17[m[K,
                 from [01m[K/usr/include/boost/math/special_functions/round.hpp:14[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/time.h:58[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:38[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:4[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/c++/9/complex:391:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)[m[Kâ€™
  391 |     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/complex:391:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/boost/config/no_tr1/complex.hpp:21[m[K,
                 from [01m[K/usr/include/boost/math/policies/error_handling.hpp:17[m[K,
                 from [01m[K/usr/include/boost/math/special_functions/round.hpp:14[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/time.h:58[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:38[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:4[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/c++/9/complex:400:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)[m[Kâ€™
  400 |     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/complex:400:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<Eigen::Matrix<float, 4, 4> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<Eigen::Matrix<float, 4, 4>*, std::vector<Eigen::Matrix<float, 4, 4> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/boost/config/no_tr1/complex.hpp:21[m[K,
                 from [01m[K/usr/include/boost/math/policies/error_handling.hpp:17[m[K,
                 from [01m[K/usr/include/boost/math/special_functions/round.hpp:14[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/time.h:58[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:38[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:4[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/c++/9/complex:409:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)[m[Kâ€™
  409 |     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/complex:409:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:456:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::Matrix4f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
  456 |         transformation_total_ = transformations.begin() * [01;36m[Ktransformation_total_[m[K;
      |                                                           [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KtransformPointCloud(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >&, pcl::PointCloud<pcl::PointXYZ>&, Eigen::Matrix4f&)[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;31m[K)[m[K;
      |                                                                                                  [01;31m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:498[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:215:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
  215 | [01;36m[Kpcl[m[K::transformPointCloud (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:215:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:66:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
   66 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:66:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:498[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:259:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const std::vector<int>&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
  259 | [01;36m[Kpcl[m[K::transformPointCloud (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:259:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:91:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const std::vector<int>&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
   91 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:91:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:110:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
  110 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:110:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:120:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
  120 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:120:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:219:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  219 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:219:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:229:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  229 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:229:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:247:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const std::vector<int>&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  247 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:247:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:258:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const std::vector<int>&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  258 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:258:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:277:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  277 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:277:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:287:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  287 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:287:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:498[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:405:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 3, 1>&, const Eigen::Quaternion<Scalar>&, bool)[m[Kâ€™
  405 | [01;36m[Kpcl[m[K::transformPointCloud (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/impl/transforms.hpp:405:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/registration/registration.h:45[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/registration/icp.h:47[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:14[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:409:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Vector3f&, const Quaternionf&, bool)[m[Kâ€™
  409 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.10/pcl/common/transforms.h:409:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:459:98:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kboost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™ is not derived from â€˜[01m[Kconst pcl::PointCloud<PointT>[m[Kâ€™
  459 |         pcl::transformPointCloud(*cloud_buffer.begin(), *transformed_cloud, transformation_total_[01;36m[K)[m[K;
      |                                                                                                  [01;36m[K^[m[K
make[2]: *** [CMakeFiles/lidar_slam.dir/build.make:76ï¼šCMakeFiles/lidar_slam.dir/src/point_process.cpp.o] é”™è¯¯ 1
make[1]: *** [CMakeFiles/Makefile2:2297ï¼šCMakeFiles/lidar_slam.dir/all] é”™è¯¯ 2
make: *** [Makefile:141ï¼šall] é”™è¯¯ 2
