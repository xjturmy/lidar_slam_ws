In file included from [01m[K/usr/include/eigen3/Eigen/Core:366[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/StdVector:14[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/point_cloud.h:45[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/include/point_process.h:7[m[K,
                 from [01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:1[m[K:
/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::Matrix<float, 4, 1>; Func = Eigen::internal::assign_op<double, float>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::Matrix<float, 4, 1>; Func = Eigen::internal::assign_op<double, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::Matrix<float, 4, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:714:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, 4, 1>; Derived = Eigen::Matrix<double, 4, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, 4, 1>; _Scalar = double; int _Rows = 4; int _Cols = 1; int _Options = 0; int _MaxRows = 4; int _MaxCols = 1][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:501:12:[m[K   required from â€˜[01m[KDerived& Eigen::QuaternionBase<Derived>::operator=(const Eigen::QuaternionBase<OtherDerived>&) [with OtherDerived = Eigen::Quaternion<float>; Derived = Eigen::Quaternion<double>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:265:116:[m[K   required from â€˜[01m[KEigen::Quaternion<Scalar, Options>::Quaternion(const Eigen::QuaternionBase<OtherDerived>&) [with Derived = Eigen::Quaternion<float>; _Scalar = double; int _Options = 0][m[Kâ€™
[01m[K/home/kiyi/lidar_slam_ws/src/lidar_slam/src/point_process.cpp:319:61:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:834:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY
  834 |   [01;31m[KEIGEN_CHECK_BINARY_COMPATIBILIY[m[K(Func,typename ActualDstTypeCleaned::Scalar,typename Src::Scalar);
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/lidar_slam.dir/build.make:76ï¼šCMakeFiles/lidar_slam.dir/src/point_process.cpp.o] é”™è¯¯ 1
make[1]: *** [CMakeFiles/Makefile2:2297ï¼šCMakeFiles/lidar_slam.dir/all] é”™è¯¯ 2
make: *** [Makefile:141ï¼šall] é”™è¯¯ 2
